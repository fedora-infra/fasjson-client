[tox]
envlist = py36,py37,lint,format,docs,licenses,bandit
isolated_build = true

[testenv]
passenv = HOME
skip_install = true
whitelist_externals =
    poetry
    rm
commands =
    rm -rf htmlcov coverage.xml
    poetry install -E cli -q
    poetry run pytest -vv --cov --cov-report term-missing --cov-report xml --cov-report html fasjson_client/tests/unit {posargs}

[testenv:lint]
commands =
    poetry install -q
    poetry run flake8 {posargs}

[testenv:format]
commands =
    poetry install -q
    poetry run black --check --diff {posargs:.}

[testenv:docs]
changedir = docs
deps = sphinx
whitelist_externals =
    poetry
    rm
    mkdir
commands=
    mkdir -p _static
    rm -rf _build
    poetry install -q
    poetry run sphinx-build -W -b html -d {envtmpdir}/doctrees .  _build/html

[testenv:licenses]
# Note: we can't use poetry export because it isn't smart enough with conditional dependencies:
# flake8 requires importlib_metadata on python < 3.8, so it's not installed, but it's exported
# and liccheck crashes on packages listed in the req file but not installed.
commands =
    poetry install -E cli -q
    #poetry export -E cli -f requirements.txt -o /tmp/fasjson-client-requirements.txt
    bash -c "pip freeze --exclude-editable --isolated > /tmp/fasjson-client-requirements.txt"
    poetry run liccheck -r /tmp/fasjson-client-requirements.txt
    rm -f /tmp/fasjson-client-requirements.txt
whitelist_externals =
    poetry
    rm
    bash

[testenv:bandit]
commands =
    poetry install -q
    poetry run bandit -r fasjson_client/ -x fasjson_client/tests/ -ll

[flake8]
show-source = True
max-line-length = 100
ignore = E203,W503
exclude = .git,.tox,dist,*egg

[pytest]
testpaths = fasjson_client/tests/unit/
